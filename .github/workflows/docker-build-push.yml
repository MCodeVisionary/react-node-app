name: ReusableDockerBuild&Push

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      build_number:
        required: true
        type: string
    secrets:
      JF_URL:
        required: true
      JF_USER:
        required: true
      JF_PASSWORD:
        required: true

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    env:
     BUILD_NAME: 'reactAppImage'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: JFrog CLI setup üê∏
        uses: jfrog/setup-jfrog-cli@v4
        env:
         JF_URL: ${{ secrets.JF_URL }}
         JF_PASSWORD: ${{ secrets.JF_PASSWORD }}
         JF_USER: ${{secrets.JF_USER}}

      - name: Login to JFrog Docker Repo
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.JF_URL }}
          username: ${{ secrets.JF_USER }}
          password: ${{ secrets.JF_PASSWORD }}

      - name: Build Docker Image üê≥
        run: |
          #echo "${{ secrets.HOST }}"
          jf docker build . -t soleng.jfrog.io/alpha-docker-virtual/${{ inputs.image_name }}:${{ inputs.build_number }}
          

      - name: Push Docker Image to JFrog üê≥
        run: |
          jf docker push soleng.jfrog.io/alpha-docker-virtual/${{ inputs.image_name }}:${{ inputs.build_number }}

      - name: Collect the build-info and aggregate
        run: |
         # Collect and store environment variables in the build-info
         jf rt bce ${{env.BUILD_NAME}} ${{github.run_number}}
         # Collect and store VCS details in the build-info
         jf rt bag ${{env.BUILD_NAME}} ${{github.run_number}}

         jf rt build-append reactApp ${{github.run_number}} reactAppImage ${{github.run_number}}
         jf rt bs ${{env.BUILD_NAME}} ${{github.run_number}}
